# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: pip install coverage

      # Runs a set of commands using the runners shell
      - name: Run Tests with Coverage
        run: coverage run --source=./ test_game_logic.py

      - name: Check Test Coverage
        run: |
          COVERAGE=$(coverage report --fail-under=75 | awk '/TOTAL/ {print $NF}' | tr -d '[:space:]' | tr -d '%')
          COVERAGE_INT=${COVERAGE%.*}
          if (( COVERAGE_INT < 75 )); then
            echo "Coverage is less than 75%"
            exit 1
          fi

          echo "Coverage is sufficient: ${COVERAGE}%"

  build_and_deploy:
    runs-on: ubuntu-latest
    needs: test
    if: ${{ needs.test.result == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and package executable
        run: |
          docker build -t anutting/go_fish_game:latest .
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Push to container registry
        run: |
          docker push anutting/go_fish_game:latest
    